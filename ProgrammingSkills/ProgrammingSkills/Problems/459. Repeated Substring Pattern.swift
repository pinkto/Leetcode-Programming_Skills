//
//  459. Repeated Substring Pattern.swift
//  ProgrammingSkills
//
//  Created by Anna Boldyreva on 11.03.2024.
//

/*
Дана строка s, проверьте, можно ли ее построить, взяв подстроку и добавив несколько копий подстроки.

 Пример 1:
 Вход: s = "abab"
 Выход: true
 Пояснение: Это дважды подстрока "ab".
 
 Пример 2:
 Ввод: s = "aba"
 Выход: false
 
 Пример 3:
 Вход: s = "abcabcabcabcabc"
 Выход: true
 Пояснения: Это подстрока "abc" четыре раза или подстрока "abcabc" два раза.
 */

class RepeatedSubstringPatternClass {
    /*
     Если в s есть повторение, значит, s можно рассматривать как комбинацию (по крайней мере) двух строк t.
     s = t + t

     Если мы удвоим s, то получим "t + t + t + t + t = 4t". Отрезав первую и последнюю буквы, мы получим "u + t + t + u = u + s + u", 
     причем u - это все, что осталось (может быть пусто).
     Но поскольку s не меньше 2t, то 2s равно 4t, а отсечение первой и последней буквы "уничтожает" только 2t, так что строка по-прежнему содержит s.
     */

    func repeatedSubstringPattern(_ s: String) -> Bool {
        // Сначала дублируем входную строку, конкатенируя ее с самой собой
        var text = s + s

        // Удаляем первый и последний символы из text
        text.removeFirst()
        text.removeLast()

        // Проверяем, содержит ли измененная строка text исходную строку s
        // Если да, то это означает, что s образована повторением подстроки, поэтому вернётся true, иначе вернется false
        return text.contains(s)
    }
}
